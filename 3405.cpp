i) * inv[mod%i] % mod;             }             for (int i = 1; i <= r; ++i) {                 C = C * (d - r + i) % mod;                 C = C * inv[i] % mod;             }         }         auto modpow = [&](int64 base, int exp) {             int64 res = 1;             while (exp) {                 if (exp & 1) res = res * base % mod;                 base = base * base % mod;                 exp >>= 1;             }             return res;         };         return int((int64(m) * C % mod) * modpow(m - 1, d - k) % mod);     } };
